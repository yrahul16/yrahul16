#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node *next;

};

void LinkedListraversal(struct Node * ptr){
    while(ptr !=NULL){
        printf("Element is : %d\n",ptr->data);
        ptr=ptr->next;
    }
}

//CASE 1:- DELETION OF FIRST NODE;;;

struct Node *DeletionOfFirstNode(struct Node *head){
    //struct Node *ptr = (struct Node *)malloc(sizeof(struct Node));
    struct Node *ptr = head;
    head = head->next;
    free(ptr);
    
    return head;
}

//CASE 2:- DELETING THE ELEMENT AT GIVEN INDEX ;;;

struct Node *DeletionInBetween(struct Node *head , int index){
    struct Node *p = head;
    struct Node *q = head->next;
    int i = 0;
    for(i = 0 ; i<index-1 ; i++){
        p  = p->next;
        q = q->next;
    }
    p->next = q->next;
    free(q);
    
    return(head);
}

// CASE - 3: DELETE THE LAST NODE ;;

struct Node *DeleteTheLastNode(struct Node *head){
    struct Node *p = head;
    struct Node *q = head->next;
    while(q->next !=NULL){
        p = p->next;
        q = q->next;
    }
    p->next = NULL;
    free(q);
    return head ;
} 

//CASE 4:- DELETING THE ELEMENT AT GIVEN VALUE ;;;

struct Node *DeleteTheGivenValue(struct Node *head, int value){
    struct Node *p = head;
    struct Node *q = head->next;
    while(q->data != value && q->next != NULL){
        q = q->next;
        p = p->next;
    }
    if(q->data == value){
        p->next = q->next;
        free(q);
    }
    return head;
}

int main(){
    struct Node *head= (struct Node *)malloc(sizeof(struct Node));
    struct Node *second= (struct Node *)malloc(sizeof(struct Node));
    struct Node *third= (struct Node *)malloc(sizeof(struct Node));
    struct Node *fourth= (struct Node *)malloc(sizeof(struct Node));
    
    head->data = 10;
    head->next = second;
    
    second->data = 20;
    second->next = third;
    
    third->data = 40;
    third->next = fourth;
    fourth->data = 50;
    fourth->next = NULL;
    
    printf("The Original Linked List Is - \n");
    
    LinkedListraversal(head);
    
    /*printf("\nAfter Deletion of First Node the Elements are :-\n");
    head = DeletionOfFirstNode(head);
    LinkedListraversal(head);*/
    
    /*printf("\nAfter Deletion at a Index, the Elements are :-\n");
    head = DeletionInBetween(head,2);
    LinkedListraversal(head);*/
    
    /*printf("\nAfter deletion of last node the elements are : - \n");
    head = DeleteTheLastNode(head);
    LinkedListraversal(head);*/
    
    printf("\nAfter deletion of given value, the elements are :-\n ");
    head = DeleteTheGivenValue(head,20);
    LinkedListraversal(head);
    return 0;
    
}
